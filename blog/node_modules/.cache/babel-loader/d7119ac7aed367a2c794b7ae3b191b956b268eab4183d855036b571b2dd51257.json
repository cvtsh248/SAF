{"ast":null,"code":"import BlogPost from \"./BlogPost.vue\";\nexport default {\n  name: \"BlogGridLoad\",\n  data: () => ({\n    numpost: 3,\n    titles: [\"A day in the park\", \"Chickens laying eggs\", \"I like turtles\"],\n    dates: [\"08.06.2023\", \"04.06.2023\", \"03.06.2023\"],\n    text: [\"Amongst the chickens were eggs which gave rise to more chickens. Amongst the newborn chicks were fluffy amongi from the skeld who enjoyed playing with them.\", \"Amongst the chickens were eggs which gave rise to more chickens. Amongst the newborn chicks were fluffy amongi from the skeld who enjoyed playing with them.\", \"Amongst the chickens were eggs which gave rise to more chickens.  Amongst the newborn chicks were fluffy amongi from the skeld who enjoyed playing with them.\"]\n  }),\n  methods: {},\n  components: {\n    BlogPost\n  },\n  mounted() {\n    async function fetchData() {\n      let response = await fetch(\"http://localhost:3000/\");\n      if (response.status === 200) {\n        let data = await response.json();\n        console.log(data);\n        console.log(data[0].title);\n      }\n    }\n    /*\n    fetch(\"http://localhost:3000/\")\n      .then((response) => {\n        this.titles[0] = response.status;\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle the error\n      });*/\n    fetchData();\n  }\n};","map":{"version":3,"names":["BlogPost","name","data","numpost","titles","dates","text","methods","components","mounted","fetchData","response","fetch","status","json","console","log","title"],"sources":["/Users/shourjo/Documents/SAF/blog/src/components/BlogGridLoad.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row no-gutters>\n      <v-col v-for=\"n in this.numpost\" :key=\"n\">\n        <BlogPost\n          :title=\"this.titles[n - 1]\"\n          :date=\"this.dates[n - 1]\"\n          :contents=\"this.text[n - 1]\"\n        />\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport BlogPost from \"./BlogPost.vue\";\nexport default {\n  name: \"BlogGridLoad\",\n\n  data: () => ({\n    numpost: 3,\n    titles: [\"A day in the park\", \"Chickens laying eggs\", \"I like turtles\"],\n    dates: [\"08.06.2023\", \"04.06.2023\", \"03.06.2023\"],\n    text: [\n      \"Amongst the chickens were eggs which gave rise to more chickens. Amongst the newborn chicks were fluffy amongi from the skeld who enjoyed playing with them.\",\n      \"Amongst the chickens were eggs which gave rise to more chickens. Amongst the newborn chicks were fluffy amongi from the skeld who enjoyed playing with them.\",\n      \"Amongst the chickens were eggs which gave rise to more chickens.  Amongst the newborn chicks were fluffy amongi from the skeld who enjoyed playing with them.\",\n    ],\n  }),\n  methods: {},\n  components: {\n    BlogPost,\n  },\n  mounted() {\n    async function fetchData() {\n      let response = await fetch(\"http://localhost:3000/\");\n      if (response.status === 200) {\n        let data = await response.json();\n        console.log(data);\n        console.log(data[0].title);\n      }\n    }\n    /*\n    fetch(\"http://localhost:3000/\")\n      .then((response) => {\n        this.titles[0] = response.status;\n      })\n      .catch((error) => {\n        console.log(error);\n        // handle the error\n      });*/\n    fetchData();\n  },\n};\n</script>\n"],"mappings":"AAeA,OAAOA,QAAO,MAAO,gBAAgB;AACrC,eAAe;EACbC,IAAI,EAAE,cAAc;EAEpBC,IAAI,EAAEA,CAAA,MAAO;IACXC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,CAAC,mBAAmB,EAAE,sBAAsB,EAAE,gBAAgB,CAAC;IACvEC,KAAK,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;IACjDC,IAAI,EAAE,CACJ,8JAA8J,EAC9J,8JAA8J,EAC9J,+JAA+J;EAEnK,CAAC,CAAC;EACFC,OAAO,EAAE,CAAC,CAAC;EACXC,UAAU,EAAE;IACVR;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,eAAeC,SAASA,CAAA,EAAG;MACzB,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAAC,wBAAwB,CAAC;MACpD,IAAID,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;QAC3B,IAAIX,IAAG,GAAI,MAAMS,QAAQ,CAACG,IAAI,CAAC,CAAC;QAChCC,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;QACjBa,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC,CAAC,CAAC,CAACe,KAAK,CAAC;MAC5B;IACF;IACA;;;;;;;;;IASAP,SAAS,CAAC,CAAC;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}